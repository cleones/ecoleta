{"ast":null,"code":"var _jsxFileName = \"/Users/cleones/Project/rocketSeat/nlw/edicao1/web/src/components/Dropzone/index.tsx\";\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FiUpload } from 'react-icons/fi';\nimport './styles.css';\n\nconst Dropzone = ({\n  onFileUpload\n}) => {\n  const [fileUrlSelected, setFileUrlSelected] = useState('');\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    const fileUrl = (window.URL ? URL : webkitURL).createObjectURL(file);\n    setFileUrlSelected(fileUrl);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: 'image/*'\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"dropzone\"\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  })), fileUrlSelected ? /*#__PURE__*/React.createElement(\"img\", {\n    src: fileUrlSelected,\n    alt: \"thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), \"Arraste de solte o arquivo aqui, ou click para selecionar um aquivo.\"));\n};\n\nexport default Dropzone;","map":{"version":3,"sources":["/Users/cleones/Project/rocketSeat/nlw/edicao1/web/src/components/Dropzone/index.tsx"],"names":["React","useCallback","useState","useDropzone","FiUpload","Dropzone","onFileUpload","fileUrlSelected","setFileUrlSelected","onDrop","acceptedFiles","file","fileUrl","window","URL","webkitURL","createObjectURL","getRootProps","getInputProps","accept"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAO,cAAP;;AAMA,MAAMC,QAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AACtD,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMO,MAAM,GAAGR,WAAW,CAAES,aAAD,IAAmB;AAC5C,UAAMC,IAAI,GAAGD,aAAa,CAAC,CAAD,CAA1B;AACA,UAAME,OAAO,GAAG,CAACC,MAAM,CAACC,GAAP,GAAaA,GAAb,GAAmBC,SAApB,EAA+BC,eAA/B,CAA+CL,IAA/C,CAAhB;AACAH,IAAAA,kBAAkB,CAACI,OAAD,CAAlB;AACD,GAJyB,EAIvB,EAJuB,CAA1B;AAKA,QAAM;AAAEK,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCf,WAAW,CAAC;AAClDM,IAAAA,MADkD;AAElDU,IAAAA,MAAM,EAAE;AAF0C,GAAD,CAAnD;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAA8BF,YAAY,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,+CAAWC,aAAa,EAAxB;AAA4B,IAAA,MAAM,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEGX,eAAe,gBACd;AAAK,IAAA,GAAG,EAAEA,eAAV;AAA2B,IAAA,GAAG,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,gBAGd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,yEALJ,CADF;AAaD,CAzBD;;AA2BA,eAAeF,QAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FiUpload } from 'react-icons/fi';\nimport './styles.css';\n\ninterface Props {\n  onFileUpload: (file: File) => void;\n}\n\nconst Dropzone: React.FC = ({ onFileUpload }: Props) => {\n  const [fileUrlSelected, setFileUrlSelected] = useState('');\n  const onDrop = useCallback((acceptedFiles) => {\n    const file = acceptedFiles[0];\n    const fileUrl = (window.URL ? URL : webkitURL).createObjectURL(file);\n    setFileUrlSelected(fileUrl);\n  }, []);\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: 'image/*',\n  });\n\n  return (\n    <div className='dropzone' {...getRootProps()}>\n      <input {...getInputProps()} accept='image/*' />\n      {fileUrlSelected ? (\n        <img src={fileUrlSelected} alt='thumbnail' />\n      ) : (\n        <p>\n          <FiUpload />\n          Arraste de solte o arquivo aqui, ou click para selecionar um aquivo.\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Dropzone;\n"]},"metadata":{},"sourceType":"module"}